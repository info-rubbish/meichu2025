name: Build Cross-Platform Binaries and Frontend Assets

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-binaries:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            arch: x86_64
            platform: linux
          - os: ubuntu-20.04
            target: aarch64-unknown-linux-musl
            arch: aarch64
            platform: linux
          - os: windows-2019
            target: x86_64-pc-windows-gnu
            arch: x86_64
            platform: windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup musl tools (Linux)
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools pkg-config make perl

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Build frontend
        working-directory: ./frontend
        run: pnpm run build

      - name: Build backend for Linux (musl)
        if: matrix.platform == 'linux'
        working-directory: ./backend
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}

      - name: Build backend for Windows
        if: matrix.platform == 'windows'
        working-directory: ./backend
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifacts directory
        run: |
          mkdir -p artifacts/layout/backend
          mkdir -p artifacts/layout/frontend/build

      - name: Copy backend binary (Linux)
        if: matrix.platform == 'linux'
        run: |
          cp ./backend/target/${{ matrix.target }}/release/backend ./artifacts/layout/backend/backend

      - name: Copy backend binary (Windows)
        if: matrix.platform == 'windows'
        run: |
          cp ./backend/target/${{ matrix.target }}/release/backend.exe ./artifacts/layout/backend/backend.exe

      - name: Copy frontend build
        run: |
          cp -r ./frontend/build/* ./artifacts/layout/frontend/build/

      - name: Create tar archive
        run: |
          cd artifacts
          tar -czf ../llumen-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz layout

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: llumen-${{ matrix.platform }}-${{ matrix.arch }}
          path: llumen-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz
